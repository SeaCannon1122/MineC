#include <stdint.h>

uint8_t pixelchar_opengl_fragment_shader_code[] =
"#version 410 core\n"
"\n"
"#extension GL_ARB_shader_storage_buffer_object : enable\n"
"\n"
"#define PIXELCHAR_IF_BIT(ptr, resolution, index, x, y) (ptr[((x) + (y) * (resolution)) / 32 + (index) * (resolution) * (resolution) / 32] & (1 << (((x) + (y) * (resolution)) % 32)) )\n"
"\n"
"uint VULKAN_PIXELFONT_INVALID = 255;\n"
"\n"
"uint PIXELCHAR_MASK_UNDERLINE = 1;\n"
"uint PIXELCHAR_MASK_CURSIVE = 2;\n"
"uint PIXELCHAR_MASK_SHADOW = 4;\n"
"uint PIXELCHAR_MASK_BACKGROUND = 8;\n"
"\n"
"layout(binding = 0) readonly buffer font0 { uint font0_bitmaps[]; };\n"
"layout(binding = 1) readonly buffer font1 { uint font1_bitmaps[]; };\n"
"layout(binding = 2) readonly buffer font2 { uint font2_bitmaps[]; };\n"
"layout(binding = 3) readonly buffer font3 { uint font3_bitmaps[]; };\n"
"layout(binding = 4) readonly buffer font4 { uint font4_bitmaps[]; };\n"
"layout(binding = 5) readonly buffer font5 { uint font5_bitmaps[]; };\n"
"layout(binding = 6) readonly buffer font6 { uint font6_bitmaps[]; };\n"
"layout(binding = 7) readonly buffer font7 { uint font7_bitmaps[]; };\n"
"\n"
"uniform ivec2 screen_size;\n"
"uniform vec4 shadow_color_devisor;\n"
"uniform uint draw_mode;\n"
"\n"
"flat in uvec4 bitmap_index_I_masks_I_font_I_font_resolution;\n"
"flat in uint scale;\n"
"in vec2 fragment_position;\n"
"in vec4 color;\n"
"in vec4 background_color;\n"
"\n"
"layout(location = 0) out vec4 fragmentColor;\n"
"\n"
"void main() {\n"
"\n"
"    uint invalid_bitmap[2];\n"
"    invalid_bitmap[0] = 0x392B293B;\n"
"    invalid_bitmap[1] = 0x494DEB00;\n"
"\n"
"    uint bitmap_index = bitmap_index_I_masks_I_font_I_font_resolution.x;\n"
"    uint masks = bitmap_index_I_masks_I_font_I_font_resolution.y;\n"
"    uint font = bitmap_index_I_masks_I_font_I_font_resolution.z;\n"
"    int font_resolution = int(bitmap_index_I_masks_I_font_I_font_resolution.w);\n"
"\n"
"    if ((draw_mode == 0 && (masks & PIXELCHAR_MASK_BACKGROUND) == 0) || (draw_mode == 1 && (masks & PIXELCHAR_MASK_SHADOW) == 0))\n"
"        fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);\n"
"    else\n"
"    {\n"
"        if (draw_mode == 0)\n"
"            fragmentColor = background_color;\n"
"\n"
"        else\n"
"        {\n"
"            int bit_set = 0;\n"
"\n"
"            ivec2 pixel_position = ivec2(fragment_position);\n"
"\n"
"            if (\n"
"                fragment_position.x >= 0.0 &&\n"
"                fragment_position.y >= 0.0 &&\n"
"                fragment_position.x / float(scale) < 8.0 &&\n"
"                fragment_position.y / float(scale) < 8.0\n"
"                )\n"
"            {\n"
"                pixel_position -= int(scale) * 4;\n"
"\n"
"                ivec2 check_coords = pixel_position;\n"
"\n"
"                if (pixel_position.x < 0)\n"
"                    check_coords.x += 1;\n"
"                if (pixel_position.y < 0)\n"
"                    check_coords.y += 1;\n"
"\n"
"                check_coords = check_coords * font_resolution / (int(scale) * 8) + font_resolution / 2;\n"
"\n"
"                if (pixel_position.x < 0)\n"
"                    check_coords.x -= 1;\n"
"                if (pixel_position.y < 0)\n"
"                    check_coords.y -= 1;\n"
"\n"
"                if (font == 0)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font0_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 1)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font1_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 2)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font2_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 3)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font3_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 4)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font4_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 5)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font5_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 6)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font6_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else if (font == 7)\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(font7_bitmaps, font_resolution, bitmap_index, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"                else\n"
"                {\n"
"                    if (PIXELCHAR_IF_BIT(invalid_bitmap, 8, 0, check_coords.x, check_coords.y) != 0)\n"
"                        bit_set = 1;\n"
"                }\n"
"\n"
"            }\n"
"            else if (pixel_position.y / scale > 7 && pixel_position.y / scale < 9)\n"
"                bit_set = 1;\n"
"\n"
"            if (bit_set == 1)\n"
"            {\n"
"                if (draw_mode == 1)\n"
"                    fragmentColor = color / shadow_color_devisor;\n"
"                else\n"
"                    fragmentColor = color;\n"
"            }\n"
"            else\n"
"                fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);\n"
"        }\n"
"\n"
"    }\n"
"\n"
"}\n";